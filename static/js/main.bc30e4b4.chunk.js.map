{"version":3,"sources":["theme.js","assets/buttonbeep.mp3","components/TREKButton.js","components/TREKBox.tsx","assets/regeneration_cycle_complete.mp3","components/TREKProgress/TREKProgressSVG.js","components/TREKProgress/TREKProgress.js","components/TREKTimer/TREKCountdown.tsx","components/TREKTimer/TREKTimer.tsx","assets/galaxy.png","App.js","reportWebVitals.js","assets/LCARSGTJ3.ttf","index.js"],"names":["theme","extendTheme","colors","darkCoral","lightGreen","lavender","purple","lightOrange","orange","fonts","heading","body","colorScheme","styles","global","html","overflowX","margin","fontFamily","h1","fontWeight","TREKButton","props","useSound","buttonbeep","volume","play","size","height","width","borderRadius","backgroundColor","color","fontSize","letterSpacing","textAlign","display","lineHeight","paddingTop","onClick","onclick","onMouseDown","label","TREKBox","tint","getColor","path","form","w","h","createPath","viewport","transform","mirror","viewBox","version","xmlns","id","d","fill","fontStyle","textAnchor","x","y","text","defaultProps","TREKProgressSVG","rotate","fillRule","TREKProgress","value","seconds","px","isAnimated","TREKCountdown","useState","timer","setTimer","progressStart","setProgressStart","useEffect","direction","justifyContent","Math","floor","alignSelf","as","py","TREKTimer","timerStart","setTimerStart","isActive","setIsActive","isActiveProp","setIsActiveProps","progressMemory","setProgressMemory","completeSound","timeoutID","useRef","console","log","current","clearTimeout","Date","getTime","document","title","toString","padStart","setTimerInPageTitle","window","setTimeout","App","p","alignItems","screen","availWidth","flex","marginLeft","position","top","right","gridTemplateColumns","gridTemplateRows","gridGap","marginY","backgroundImage","galaxy","backgroundSize","backgroundPosition","backgroundRepeat","mx","my","flexBasis","bottom","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.bc30e4b4.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport const styles = {\n  global: () => ({\n    html: {\n      overflowX: \"hidden\",\n      margin: 0,\n      fontFamily: \"LCARSGTJ3\",\n    },\n    h1: {\n      fontWeight: \"normal\",\n    },\n  }),\n};\n\nconst theme = extendTheme({\n  colors: {\n    darkCoral: \"#DB5F63\",\n    lightGreen: \"#D5DABA\",\n    lavender: \"#D695CF\",\n    purple: \"#9B96FF\",\n    lightOrange: \"#FFAA7A\",\n    orange: \"#FF9400\",\n  },\n  fonts: {\n    heading: `LCARSGTJ3`,\n    body: `LCARSGTJ3`,\n  },\n  colorScheme: {\n    darkCoral: \"#DB5F63\",\n  },\n  styles,\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/buttonbeep.e856bb6a.mp3\";","import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport buttonbeep from \"../assets/buttonbeep.mp3\";\n\nfunction TREKButton(props) {\n  const [play] = useSound(buttonbeep, {\n    volume: 0.25,\n  });\n\n  const handleClick = () => {\n    play();\n  };\n\n  return (\n    <Button\n      size=\"lg\"\n      height=\"56px\"\n      width=\"192px\"\n      borderRadius=\"100px\"\n      backgroundColor={props.color}\n      color=\"black\"\n      fontSize=\"28px\"\n      letterSpacing=\"-0.05px\"\n      textAlign=\"right\"\n      display=\"block\"\n      lineHeight=\"14px\"\n      paddingTop=\"20px\"\n      fontWeight=\"400\"\n      onClick={props.onclick}\n      onMouseDown={handleClick}\n    >\n      {props.label}\n    </Button>\n  );\n}\n\nexport default TREKButton;\n","import { Box } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React, { FunctionComponent } from \"react\";\nimport theme from \"../theme\";\n\ninterface TREKBoxProps {\n  form: string;\n  width: number;\n  height: number;\n  tint: string;\n  text: string;\n  mirror: boolean;\n}\n\nconst createPath = (form: string, w: number, h: number): string => {\n  let path = \"\";\n\n  switch (form) {\n    case \"curve\": {\n      path = `M${w},-7.10542736e-15 L${w},24 L200,24 C175.505067,24 156.395619,39.599346 156,64 L156,${h} L0,${h} L0,89.6 C0,40.1152864 40.1152864,-7.10542736e-15 89.6,-7.10542736e-15 L${w},-7.10542736e-15 Z`;\n      break;\n    }\n    case \"block\": {\n      path = `M0 0 h 156 v ${h} h-156 Z`;\n      break;\n    }\n    case \"default\": {\n      path = `M0 0 h 156 v 112 h-156 Z`;\n      break;\n    }\n  }\n\n  return path;\n};\n\nconst TREKBox: FunctionComponent<TREKBoxProps> = (props) => {\n  const color = props.tint ? getColor(theme, props.tint) : \"orange\";\n  const path = createPath(props.form, props.width, props.height);\n  const viewport = `0 0 ${props.width} ${props.height}`;\n\n  return (\n    <Box\n      margin=\"4px 8px\"\n      {...props}\n      transform={props.mirror ? \"rotateX(180deg)\" : \"none\"}\n    >\n      <svg\n        width={props.width}\n        viewBox={viewport}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"Navigation/Edge-Down-Copy\">\n          <path d={path} id=\"Path\" fill={color}></path>\n          <text\n            fontFamily=\"LCARSGTJ3\"\n            fontSize=\"28\"\n            fontStyle=\"condensed\"\n            fontWeight=\"normal\"\n            fill=\"#000000\"\n            textAnchor=\"end\"\n            transform={\n              props.mirror\n                ? `scale(1,-1) translate(0,-${2 * props.height - 36})`\n                : \"scale(1,1)\"\n            }\n          >\n            <tspan x=\"140\" y={props.height - 8}>\n              {props.text}\n            </tspan>\n          </text>\n        </g>\n      </svg>\n    </Box>\n  );\n};\n\nTREKBox.defaultProps = {\n  form: \"block\",\n  width: 156,\n  height: 112,\n  tint: \"orange\",\n  text: \"Engange\",\n  mirror: false,\n};\n\nexport default TREKBox;\n","export default __webpack_public_path__ + \"static/media/regeneration_cycle_complete.6c7a652c.mp3\";","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nfunction TREKProgressSVG(props) {\n  return (\n    <Box transform={props.rotate ? \"rotate(-180deg)\" : \"rotate(0)\"}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 299 20\">\n        <path\n          fill=\"#FFAA7A\"\n          fillRule=\"evenodd\"\n          d=\"M19,0 L19,8 L16,8 C13.8578046,8 12.1089211,9.68396847 12.0048953,11.8003597 L12,12 L12,286 C12,288.142195 13.6839685,289.891079 15.8003597,289.995105 L16,290 L19,290 L19,298 L12,298 C5.372583,298 0,292.627417 0,286 L0,12 C0,5.372583 5.372583,0 12,0 L19,0 Z\"\n          transform=\"rotate(90 149 149.5)\"\n        />\n      </svg>\n    </Box>\n  );\n}\n\nexport default TREKProgressSVG;\n","import { Progress, Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport TREKProgressSVG from \"./TREKProgressSVG\";\n\nfunction TREKProgress(props) {\n  return (\n    <Box {...props}>\n      <TREKProgressSVG />\n      <Progress\n        value={props.seconds}\n        height=\"20px\"\n        colorScheme=\"pink\"\n        px=\"5%\"\n        width=\"100%\"\n        backgroundColor=\"transparent\"\n        isAnimated\n      />\n      <TREKProgressSVG rotate />\n    </Box>\n  );\n}\n\nexport default TREKProgress;\n","import { Box, Flex, Heading } from \"@chakra-ui/react\";\nimport TREKProgress from \"../TREKProgress/TREKProgress\";\nimport React, { useEffect, useState, FunctionComponent } from \"react\";\n\ninterface TREKCountdownProps {\n  timer: number;\n  progressStart: number;\n}\n\nconst TREKCountdown: FunctionComponent<TREKCountdownProps> = (props) => {\n  const [timer, setTimer] = useState(props.timer);\n  const [progressStart, setProgressStart] = useState(props.progressStart);\n\n  useEffect(() => {\n    setTimer(props.timer);\n    setProgressStart(props.progressStart);\n  }, [props.timer, props.progressStart]);\n\n  return (\n    <Flex direction=\"column\" justifyContent=\"flex-end\" {...props}>\n      <Heading fontWeight=\"400\" size=\"4xl\" color=\"orange\" textAlign=\"right\">\n        <Box display=\"inline-block\" width=\"24px\">{`${\n          timer ? Math.floor(timer / 60 / 10) : \"0\"\n        }`}</Box>\n        <Box display=\"inline-block\" width=\"24px\">{`${\n          timer ? Math.floor(timer / 60) % 10 : \"0\"\n        }`}</Box>\n        :\n        <Box display=\"inline-block\" width=\"24px\">{`${\n          timer ? Math.floor((timer % 60) / 10) : \"0\"\n        }`}</Box>\n        <Box display=\"inline-block\" width=\"24px\">{`${\n          timer ? (timer % 60) % 10 : \"0\"\n        }`}</Box>\n      </Heading>\n      <TREKProgress\n        seconds={\n          timer && progressStart ? Math.floor((timer / progressStart) * 100) : 0\n        }\n        width=\"300px\"\n        alignSelf=\"flex-end\"\n      />\n      <Heading\n        as=\"h3\"\n        fontWeight=\"400\"\n        size=\"2xl\"\n        color=\"orange\"\n        textAlign=\"right\"\n        py=\"16px\"\n      >\n        Efficiency Mode\n      </Heading>\n    </Flex>\n  );\n};\n\nexport default TREKCountdown;\n","import React, { FunctionComponent, useEffect, useState, useRef } from \"react\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport completeSound from \"../../assets/regeneration_cycle_complete.mp3\";\nimport TREKCountdown from \"./TREKCountdown\";\n\ninterface TREKTimerProps {\n  value: number;\n  isActive: boolean;\n  timerStart: number;\n}\n\nconst setTimerInPageTitle = (timer: number) => {\n  document.title = `${Math.floor(timer / 60)\n    .toString()\n    .padStart(2, \"0\")}:${(timer % 60).toString().padStart(2, \"0\")}`;\n};\n\nconst TREKTimer: FunctionComponent<TREKTimerProps> = (props) => {\n  const [timer, setTimer] = useState(props.value);\n  const [timerStart, setTimerStart] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [isActiveProp, setIsActiveProps] = useState(props.isActive);\n  const [progressStart, setProgressStart] = useState(props.value);\n  const [progressMemory, setProgressMemory] = useState(0);\n  const [play] = useSound(completeSound, {\n    volume: 0.25,\n  });\n  let timeoutID = useRef(0);\n\n  useEffect(() => {\n    console.log(\"set timer with prop\", props.value);\n    if (timeoutID.current > 0) {\n      clearTimeout(timeoutID.current);\n    }\n    setIsActive(false);\n    setTimerStart(0);\n    setProgressStart(props.value);\n    setProgressMemory(props.value);\n    setTimer(props.value);\n  }, [props.value]);\n\n  useEffect(() => {\n    console.log(\"isActive change\", props.isActive, isActiveProp, isActive);\n    if (props.isActive !== isActiveProp) {\n      setIsActive(!isActive);\n      setIsActiveProps(props.isActive);\n      setTimerStart(Math.floor(new Date().getTime() / 1000) + progressMemory);\n    }\n  }, [props.isActive, isActiveProp, isActive, progressMemory]);\n\n  useEffect(() => {\n    setTimerInPageTitle(timer);\n    if (isActive) {\n      timeoutID.current = window.setTimeout(() => {\n        setTimer(timerStart - Math.floor(new Date().getTime() / 1000));\n      }, 1000);\n      if (timer === 0) {\n        play();\n        setIsActive(false);\n        clearTimeout(timeoutID.current);\n      }\n    } else {\n      setProgressMemory(timer);\n    }\n  }, [timer, timerStart, play, isActive, setIsActive]);\n\n  return (\n    <TREKCountdown timer={timer} progressStart={progressStart}></TREKCountdown>\n  );\n};\n\nTREKTimer.defaultProps = {};\n\nexport default TREKTimer;\n","export default __webpack_public_path__ + \"static/media/galaxy.fd387f8c.png\";","import \"./index.css\";\nimport \"./App.css\";\nimport \"./theme\";\nimport TREKButton from \"./components/TREKButton\";\nimport { Box, Flex, Heading, SimpleGrid } from \"@chakra-ui/react\";\nimport TREKBox from \"./components/TREKBox\";\nimport TREKTimer from \"./components/TREKTimer/TREKTimer\";\nimport React, { useState } from \"react\";\nimport galaxy from \"./assets/galaxy.png\";\n\nfunction App() {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  return (\n    <Flex\n      direction=\"column\"\n      backgroundColor=\"black\"\n      height=\"100vh\"\n      p={[1, 2, 4]}\n    >\n      <Flex justifyContent=\"space-between\" width=\"100%\">\n        <Flex direction=\"column\" justifyContent=\"flex-end\" alignItems=\"left\">\n          <TREKBox text=\"LCARS\" tint=\"lavender\" mirror={true} form=\"block\" />\n          <TREKBox\n            width={window.screen.availWidth / 3}\n            text=\"NCC-74656\"\n            tint=\"purple\"\n            mirror={true}\n            form=\"curve\"\n          />\n        </Flex>\n        <Flex direction=\"column\" justifyContent=\"flex-end\" flex=\"1\">\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            margin=\"4px 8px 4px 0px\"\n          ></Box>\n        </Flex>\n        <Flex\n          direction=\"column\"\n          justifyContent=\"flex-end\"\n          flex=\"5\"\n          marginLeft=\"8px\"\n        >\n          <Box position=\"absolute\" top=\"20px\" right=\"16px\">\n            <Heading\n              as=\"h1\"\n              fontWeight=\"400\"\n              textAlign=\"right\"\n              size=\"4xl\"\n              color=\"orange\"\n            >\n              pomodoro timer\n            </Heading>\n            <SimpleGrid\n              gridTemplateColumns=\"192px 192px\"\n              gridTemplateRows=\"auto\"\n              gridGap=\"8px\"\n            >\n              <TREKButton\n                label=\"pomodoro\"\n                color=\"darkCoral\"\n                onclick={() => {\n                  setTimer(1500);\n                }}\n              />\n              <TREKButton\n                label=\"long break\"\n                color=\"orange\"\n                onclick={() => {\n                  setTimer(900);\n                }}\n              />\n              <TREKButton\n                label=\"short break\"\n                color=\"orange\"\n                onclick={() => {\n                  setTimer(10);\n                }}\n              />\n              <TREKButton\n                label=\"start/stop\"\n                color=\"lightGreen\"\n                onclick={() => {\n                  setIsActive(!isActive);\n                }}\n              />\n            </SimpleGrid>\n          </Box>\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            marginY=\"4px\"\n          ></Box>\n        </Flex>\n      </Flex>\n      <Flex\n        justifyContent=\"space-between\"\n        width=\"100%\"\n        flex=\"1\"\n        backgroundImage={`url(${galaxy})`}\n        backgroundSize=\"contain\"\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n      >\n        <Flex direction=\"column\">\n          <TREKBox\n            width={window.screen.availWidth / 3}\n            text=\"Captain\"\n            tint=\"darkCoral\"\n            form=\"curve\"\n          />\n          <TREKBox text=\"Janeway\" tint=\"darkCoral\" form=\"block\" mirror />\n          <TREKBox\n            text=\"Engage\"\n            tint=\"orange\"\n            form=\"block\"\n            height={150}\n            mirror\n          />\n          <Box\n            backgroundColor=\"lightOrange\"\n            flex=\"1 1 auto\"\n            width=\"156px\"\n            mx=\"8px\"\n            my=\"4px\"\n          ></Box>\n        </Flex>\n        <Flex\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          flex=\"1\"\n          flexBasis=\"200px\"\n        >\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            margin=\"4px 8px 4px 0px\"\n          ></Box>\n        </Flex>\n        <Flex\n          marginLeft=\"8px\"\n          direction=\"column\"\n          justifyContent=\"space-between\"\n          flex=\"5\"\n        >\n          <Box height=\"24px\" backgroundColor=\"lavender\" marginY=\"4px\"></Box>\n          <Box position=\"absolute\" bottom=\"16px\" right=\"16px\">\n            <TREKTimer value={timer} isActive={isActive}></TREKTimer>\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export default __webpack_public_path__ + \"static/media/LCARSGTJ3.73fff889.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport \"./assets/LCARSGTJ3.ttf\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}