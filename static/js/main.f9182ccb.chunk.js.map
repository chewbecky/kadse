{"version":3,"sources":["theme.js","components/TREKButton.js","components/TREKProgress/TREKProgressSVG.js","components/TREKProgress/TREKProgress.js","components/TREKBox.js","App.js","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","darkCoral","lightGreen","lavender","purple","lightOrange","orange","fonts","heading","body","colorScheme","styles","global","html","overflowX","margin","fontFamily","h1","fontWeight","TREKButton","props","size","height","width","borderRadius","backgroundColor","color","fontSize","letterSpacing","textAlign","display","lineHeight","paddingTop","onClick","onclick","label","TREKProgressSVG","viewBox","version","xmlns","style","transform","rotate","id","stroke","strokeWidth","fill","fillRule","d","TREKProgress","value","seconds","marginRight","marginLeft","isAnimated","TREKBox","getColor","tint","form","path","mirror","fontStyle","textAnchor","x","y","title","App","useState","timer","setTimer","isActive","setIsActive","timerStart","setTimerStart","setTimerAndStart","useEffect","interval","setInterval","clearInterval","className","as","marginTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f9182ccb.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport const styles = {\n  global: () => ({\n    html: {\n      overflowX: \"hidden\",\n      margin: 0,\n      fontFamily: \"LCARSGTJ3\",\n    },\n    h1: {\n      fontWeight: \"normal\",\n    },\n  }),\n};\n\nconst theme = extendTheme({\n  colors: {\n    darkCoral: \"#DB5F63\",\n    lightGreen: \"#D5DABA\",\n    lavender: \"#D695CF\",\n    purple: \"#9B96FF\",\n    lightOrange: \"#FFAA7A\",\n    orange: \"#FF9400\",\n  },\n  fonts: {\n    heading: `LCARSGTJ3`,\n    body: `LCARSGTJ3`,\n  },\n  colorScheme: {\n    darkCoral: \"#DB5F63\",\n  },\n  styles,\n});\n\nexport default theme;\n","import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\n\nfunction TREKButton(props) {\n  return (\n    <Button\n      size=\"lg\"\n      height=\"56px\"\n      width=\"192px\"\n      borderRadius=\"100px\"\n      backgroundColor={props.color}\n      color=\"black\"\n      fontSize=\"28px\"\n      letterSpacing=\"-0.05px\"\n      textAlign=\"right\"\n      display=\"block\"\n      lineHeight=\"14px\"\n      paddingTop=\"20px\"\n      fontWeight=\"400\"\n      onClick={props.onclick}\n    >\n      {props.label}\n    </Button>\n  );\n}\n\nexport default TREKButton;\n","function TREKProgressSVG(props) {\n  return (\n    <svg\n      width=\"356px\"\n      height=\"41px\"\n      viewBox=\"0 0 356 41\"\n      version=\"1.1\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n      style={{ margin: \"-6px\" }}\n      transform={props.rotate ? \"rotate(-180)\" : \"rotate(0)\"}\n    >\n      <g\n        id=\"Symbols\"\n        stroke=\"none\"\n        strokeWidth=\"1\"\n        fill=\"none\"\n        fillRule=\"evenodd\"\n      >\n        <g\n          id=\"Combined-Shape\"\n          transform=\"translate(158.000000, -157.000000)\"\n          fill=\"#FFAA7A\"\n        >\n          <path\n            d=\"M40,0 L40,16 L32,16 C27.581722,16 24,19.581722 24,24 L24,24 L24,331 C24,335.418278 27.581722,339 32,339 L32,339 L40,339 L40,355 L24,355 C10.745166,355 1.623249e-15,344.254834 0,331 L0,24 C-1.623249e-15,10.745166 10.745166,2.4348735e-15 24,0 L40,0 Z\"\n            transform=\"translate(20.000000, 177.500000) rotate(90.000000) translate(-20.000000, -177.500000) \"\n          />\n        </g>\n      </g>\n    </svg>\n  );\n}\n\nexport default TREKProgressSVG;\n","import { Progress } from \"@chakra-ui/react\";\nimport React, { useState, useEffect } from \"react\";\nimport TREKProgressSVG from \"./TREKProgressSVG\";\n\nfunction TREKProgress(props) {\n  return (\n    <div style={{ margin: \"30px auto\", width: \"356px\" }}>\n      <TREKProgressSVG />\n      <Progress\n        value={props.seconds}\n        height=\"20px\"\n        colorScheme=\"pink\"\n        style={{\n          width: \"310px\",\n          marginRight: \"auto\",\n          marginLeft: \"auto\",\n        }}\n        backgroundColor=\"transparent\"\n        isAnimated\n      />\n      <TREKProgressSVG rotate={true} />\n    </div>\n  );\n}\n\nexport default TREKProgress;\n","import { Box } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React from \"react\";\nimport theme from \"../theme\";\n\nfunction TREKBox(props) {\n  const color = getColor(theme, props.tint);\n\n  const form = (form) => {\n    switch (form) {\n      case \"curve\":\n        return {\n          path:\n            \"M560,-7.10542736e-15 L560,24 L200,24 C175.505067,24 156.395619,39.599346 156,64 L156,112 L0,112 L0,89.6 C0,40.1152864 40.1152864,-7.10542736e-15 89.6,-7.10542736e-15 L560,-7.10542736e-15 Z\",\n          viewBox: \"0 0 560 112\",\n        };\n      case \"block\":\n        return {\n          path: \"M0 0 h 156 v 112 h-156 Z\",\n          viewBox: \"0 0 156 112\",\n        };\n      default:\n        return {\n          path:\n            \"M560,-7.10542736e-15 L560,24 L200,24 C175.505067,24 156.395619,39.599346 156,64 L156,112 L0,112 L0,89.6 C0,40.1152864 40.1152864,-7.10542736e-15 89.6,-7.10542736e-15 L560,-7.10542736e-15 Z\",\n          viewBox: \"0 0 560 112\",\n        };\n    }\n  };\n\n  return (\n    <Box {...props}>\n      <svg\n        width=\"560px\"\n        height=\"112px\"\n        viewBox={form(props.form).viewBox}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n        transform={props.mirror ? \"scale(1,-1)\" : \"scale(1,1)\"}\n      >\n        <g id=\"Navigation/Edge-Down-Copy\">\n          <path d={form(props.form).path} id=\"Path\" fill={color}></path>\n          <text\n            id=\"Settings\"\n            fontFamily=\"LCARSGTJ3\"\n            fontSize=\"28\"\n            fontStyle=\"condensed\"\n            fontWeight=\"normal\"\n            letterSpacing=\"-0.0466666639\"\n            fill=\"#000000\"\n            textAnchor=\"end\"\n            transform={props.mirror ? \"scale(1,-1)\" : \"scale(1,1)\"}\n          >\n            <tspan x=\"140\" y={props.mirror ? \"-80\" : \"103.6\"}>\n              {props.title}\n            </tspan>\n          </text>\n        </g>\n      </svg>\n    </Box>\n  );\n}\n\nexport default TREKBox;\n","import \"./index.css\";\nimport \"./App.css\";\nimport \"./theme\";\nimport TREKButton from \"./components/TREKButton\";\nimport { ButtonGroup, Heading } from \"@chakra-ui/react\";\nimport TREKProgress from \"./components/TREKProgress/TREKProgress\";\nimport TREKBox from \"./components/TREKBox\";\nimport React, { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [timerStart, setTimerStart] = useState(0);\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function setTimerAndStart(value) {\n    setTimer(value);\n    setTimerStart(value);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTimer((timer) => timer - 1);\n      }, 1000);\n      if (timer === 0) {\n        clearInterval(interval);\n        setIsActive(!isActive);\n      }\n    } else if (!isActive) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, timer]);\n\n  return (\n    <div className=\"App\">\n      <div className=\"actions\">\n        <Heading as=\"h1\" fontWeight=\"400\" size=\"4xl\" color=\"brand.orange\">\n          pomodoro timer\n        </Heading>\n        <Heading as=\"h3\" fontWeight=\"400\" size=\"4xl\" color=\"brand.orange\">\n          {timer}\n        </Heading>\n        <ButtonGroup>\n          <TREKButton\n            label=\"pomodoro\"\n            color=\"darkCoral\"\n            onclick={() => {\n              setTimerAndStart(1500);\n            }}\n          />\n          <TREKButton\n            label=\"long break\"\n            color=\"orange\"\n            onclick={() => {\n              setTimerAndStart(900);\n            }}\n          />\n          <TREKButton\n            label=\"short break\"\n            color=\"orange\"\n            onclick={() => {\n              setTimerAndStart(300);\n            }}\n          />\n          <TREKButton\n            label=\"start/stop\"\n            color=\"lightGreen\"\n            onclick={() => toggle()}\n          />\n        </ButtonGroup>\n        <TREKProgress seconds={(timer / timerStart) * 100} />\n        <TREKBox title=\"test\" tint=\"darkCoral\" mirror=\"true\" form=\"curve\" />\n        <TREKBox\n          title=\"asdfasdfas\"\n          marginTop=\"2rem\"\n          tint=\"darkCoral\"\n          form=\"curve\"\n        />\n        <TREKBox\n          title=\"Ich teste weiter\"\n          marginTop=\"2rem\"\n          tint=\"orange\"\n          form=\"block\"\n          mirror\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}