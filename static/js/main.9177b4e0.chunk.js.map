{"version":3,"sources":["theme.js","assets/buttonbeep.mp3","components/TREKButton.js","components/TREKProgress/TREKProgressSVG.js","components/TREKProgress/TREKProgress.js","components/TREKBox.tsx","assets/regeneration_cycle_complete.mp3","assets/galaxy.png","App.js","reportWebVitals.js","index.js"],"names":["theme","extendTheme","colors","darkCoral","lightGreen","lavender","purple","lightOrange","orange","fonts","heading","body","colorScheme","styles","global","html","overflowX","margin","fontFamily","h1","fontWeight","TREKButton","props","useSound","buttonbeep","volume","play","size","height","width","borderRadius","backgroundColor","color","fontSize","letterSpacing","textAlign","display","lineHeight","paddingTop","onClick","onclick","onMouseDown","label","TREKProgressSVG","transform","rotate","xmlns","viewBox","fill","fillRule","d","TREKProgress","value","seconds","px","isAnimated","TREKBox","tint","getColor","path","form","w","h","createPath","viewport","mirror","version","id","fontStyle","textAnchor","x","y","text","defaultProps","App","useState","timer","setTimer","isActive","setIsActive","timerStart","setTimerStart","completeSound","setTimerAndStart","useEffect","interval","setInterval","clearInterval","direction","p","justifyContent","alignItems","window","screen","availWidth","flex","marginLeft","position","top","right","as","gridTemplateColumns","gridTemplateRows","gridGap","marginY","backgroundImage","galaxy","backgroundSize","backgroundPosition","backgroundRepeat","mx","my","flexBasis","bottom","Math","floor","toString","padStart","alignSelf","py","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9177b4e0.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport const styles = {\n  global: () => ({\n    html: {\n      overflowX: \"hidden\",\n      margin: 0,\n      fontFamily: \"LCARSGTJ3\",\n    },\n    h1: {\n      fontWeight: \"normal\",\n    },\n  }),\n};\n\nconst theme = extendTheme({\n  colors: {\n    darkCoral: \"#DB5F63\",\n    lightGreen: \"#D5DABA\",\n    lavender: \"#D695CF\",\n    purple: \"#9B96FF\",\n    lightOrange: \"#FFAA7A\",\n    orange: \"#FF9400\",\n  },\n  fonts: {\n    heading: `LCARSGTJ3`,\n    body: `LCARSGTJ3`,\n  },\n  colorScheme: {\n    darkCoral: \"#DB5F63\",\n  },\n  styles,\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/buttonbeep.e856bb6a.mp3\";","import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport useSound from \"use-sound\";\nimport buttonbeep from \"../assets/buttonbeep.mp3\";\n\nfunction TREKButton(props) {\n  const [play] = useSound(buttonbeep, {\n    volume: 0.25,\n  });\n\n  const handleClick = () => {\n    play();\n  };\n\n  return (\n    <Button\n      size=\"lg\"\n      height=\"56px\"\n      width=\"192px\"\n      borderRadius=\"100px\"\n      backgroundColor={props.color}\n      color=\"black\"\n      fontSize=\"28px\"\n      letterSpacing=\"-0.05px\"\n      textAlign=\"right\"\n      display=\"block\"\n      lineHeight=\"14px\"\n      paddingTop=\"20px\"\n      fontWeight=\"400\"\n      onClick={props.onclick}\n      onMouseDown={handleClick}\n    >\n      {props.label}\n    </Button>\n  );\n}\n\nexport default TREKButton;\n","import React from \"react\";\nimport { Box } from \"@chakra-ui/react\";\n\nfunction TREKProgressSVG(props) {\n  return (\n    <Box transform={props.rotate ? \"rotate(-180deg)\" : \"rotate(0)\"}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 299 20\">\n        <path\n          fill=\"#FFAA7A\"\n          fillRule=\"evenodd\"\n          d=\"M19,0 L19,8 L16,8 C13.8578046,8 12.1089211,9.68396847 12.0048953,11.8003597 L12,12 L12,286 C12,288.142195 13.6839685,289.891079 15.8003597,289.995105 L16,290 L19,290 L19,298 L12,298 C5.372583,298 0,292.627417 0,286 L0,12 C0,5.372583 5.372583,0 12,0 L19,0 Z\"\n          transform=\"rotate(90 149 149.5)\"\n        />\n      </svg>\n    </Box>\n  );\n}\n\nexport default TREKProgressSVG;\n","import { Progress, Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport TREKProgressSVG from \"./TREKProgressSVG\";\n\nfunction TREKProgress(props) {\n  return (\n    <Box {...props}>\n      <TREKProgressSVG />\n      <Progress\n        value={props.seconds}\n        height=\"20px\"\n        colorScheme=\"pink\"\n        px=\"5%\"\n        width=\"100%\"\n        backgroundColor=\"transparent\"\n        isAnimated\n      />\n      <TREKProgressSVG rotate />\n    </Box>\n  );\n}\n\nexport default TREKProgress;\n","import { Box } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React, { FunctionComponent } from \"react\";\nimport theme from \"../theme\";\n\ninterface TREKBoxProps {\n  form: string;\n  width: number;\n  height: number;\n  tint: string;\n  text: string;\n  mirror: boolean;\n}\n\nconst createPath = (form: string, w: number, h: number): string => {\n  let path = \"\";\n\n  switch (form) {\n    case \"curve\": {\n      path = `M${w},-7.10542736e-15 L${w},24 L200,24 C175.505067,24 156.395619,39.599346 156,64 L156,${h} L0,${h} L0,89.6 C0,40.1152864 40.1152864,-7.10542736e-15 89.6,-7.10542736e-15 L${w},-7.10542736e-15 Z`;\n      break;\n    }\n    case \"block\": {\n      path = `M0 0 h 156 v ${h} h-156 Z`;\n      break;\n    }\n    case \"default\": {\n      path = `M0 0 h 156 v 112 h-156 Z`;\n      break;\n    }\n  }\n\n  return path;\n};\n\nconst TREKBox: FunctionComponent<TREKBoxProps> = (props) => {\n  const color = props.tint ? getColor(theme, props.tint) : \"orange\";\n  const path = createPath(props.form, props.width, props.height);\n  const viewport = `0 0 ${props.width} ${props.height}`;\n\n  return (\n    <Box\n      margin=\"4px 8px\"\n      {...props}\n      transform={props.mirror ? \"rotateX(180deg)\" : \"none\"}\n    >\n      <svg\n        width={props.width}\n        viewBox={viewport}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"Navigation/Edge-Down-Copy\">\n          <path d={path} id=\"Path\" fill={color}></path>\n          <text\n            fontFamily=\"LCARSGTJ3\"\n            fontSize=\"28\"\n            fontStyle=\"condensed\"\n            fontWeight=\"normal\"\n            fill=\"#000000\"\n            textAnchor=\"end\"\n            transform={\n              props.mirror\n                ? `scale(1,-1) translate(0,-${2 * props.height - 36})`\n                : \"scale(1,1)\"\n            }\n          >\n            <tspan x=\"140\" y={props.height - 8}>\n              {props.text}\n            </tspan>\n          </text>\n        </g>\n      </svg>\n    </Box>\n  );\n};\n\nTREKBox.defaultProps = {\n  form: \"block\",\n  width: 156,\n  height: 112,\n  tint: \"orange\",\n  text: \"Engange\",\n  mirror: false,\n};\n\nexport default TREKBox;\n","export default __webpack_public_path__ + \"static/media/regeneration_cycle_complete.6c7a652c.mp3\";","export default __webpack_public_path__ + \"static/media/galaxy.fd387f8c.png\";","import \"./index.css\";\nimport \"./App.css\";\nimport \"./theme\";\nimport TREKButton from \"./components/TREKButton\";\nimport { Box, Flex, Heading, SimpleGrid } from \"@chakra-ui/react\";\nimport TREKProgress from \"./components/TREKProgress/TREKProgress\";\nimport TREKBox from \"./components/TREKBox\";\nimport React, { useState, useEffect } from \"react\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport completeSound from \"./assets/regeneration_cycle_complete.mp3\";\nimport galaxy from \"./assets/galaxy.png\";\n\nfunction App() {\n  const [timer, setTimer] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n  const [timerStart, setTimerStart] = useState(0);\n  const [play] = useSound(completeSound, {\n    volume: 0.25,\n  });\n\n  function toggle() {\n    setIsActive(!isActive);\n  }\n\n  function setTimerAndStart(value) {\n    setTimer(value);\n    setTimerStart(value);\n  }\n\n  useEffect(() => {\n    let interval = null;\n    if (isActive) {\n      interval = setInterval(() => {\n        setTimer((timer) => timer - 1);\n      }, 1000);\n      if (timer === 0) {\n        clearInterval(interval);\n        setIsActive(!isActive);\n        play();\n      }\n    } else if (!isActive) {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [isActive, play, timer]);\n\n  return (\n    <Flex\n      direction=\"column\"\n      backgroundColor=\"black\"\n      height=\"100vh\"\n      p={[1, 2, 4]}\n    >\n      <Flex justifyContent=\"space-between\" width=\"100%\">\n        <Flex direction=\"column\" justifyContent=\"flex-end\" alignItems=\"left\">\n          <TREKBox text=\"LCARS\" tint=\"lavender\" mirror={true} form=\"block\" />\n          <TREKBox\n            width={window.screen.availWidth / 3}\n            text=\"NCC-74656\"\n            tint=\"purple\"\n            mirror={true}\n            form=\"curve\"\n          />\n        </Flex>\n        <Flex direction=\"column\" justifyContent=\"flex-end\" flex=\"1\">\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            margin=\"4px 8px 4px 0px\"\n          ></Box>\n        </Flex>\n        <Flex\n          direction=\"column\"\n          justifyContent=\"flex-end\"\n          flex=\"5\"\n          marginLeft=\"8px\"\n        >\n          <Box position=\"absolute\" top=\"8px\" right=\"16px\">\n            <Heading\n              as=\"h1\"\n              fontWeight=\"400\"\n              textAlign=\"right\"\n              size=\"4xl\"\n              color=\"orange\"\n            >\n              pomodoro timer\n            </Heading>\n            <SimpleGrid\n              gridTemplateColumns=\"192px 192px\"\n              gridTemplateRows=\"auto\"\n              gridGap=\"8px\"\n            >\n              <TREKButton\n                label=\"pomodoro\"\n                color=\"darkCoral\"\n                onclick={() => {\n                  setTimerAndStart(1500);\n                }}\n              />\n              <TREKButton\n                label=\"long break\"\n                color=\"orange\"\n                onclick={() => {\n                  setTimerAndStart(900);\n                }}\n              />\n              <TREKButton\n                label=\"short break\"\n                color=\"orange\"\n                onclick={() => {\n                  setTimerAndStart(10);\n                }}\n              />\n              <TREKButton\n                label=\"start/stop\"\n                color=\"lightGreen\"\n                onclick={() => toggle()}\n              />\n            </SimpleGrid>\n          </Box>\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            marginY=\"4px\"\n          ></Box>\n        </Flex>\n      </Flex>\n      <Flex\n        justifyContent=\"space-between\"\n        width=\"100%\"\n        flex=\"1\"\n        backgroundImage={`url(${galaxy})`}\n        backgroundSize=\"contain\"\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n      >\n        <Flex direction=\"column\">\n          <TREKBox\n            width={window.screen.availWidth / 3}\n            text=\"Captain\"\n            tint=\"darkCoral\"\n            form=\"curve\"\n          />\n          <TREKBox text=\"Janeway\" tint=\"darkCoral\" form=\"block\" mirror />\n          <TREKBox\n            text=\"Engage\"\n            tint=\"orange\"\n            form=\"block\"\n            height={150}\n            mirror\n          />\n          <Box\n            backgroundColor=\"lightOrange\"\n            flex=\"1 1 auto\"\n            width=\"156px\"\n            mx=\"8px\"\n            my=\"4px\"\n          ></Box>\n        </Flex>\n        <Flex\n          direction=\"column\"\n          justifyContent=\"flex-start\"\n          flex=\"1\"\n          flexBasis=\"200px\"\n        >\n          <Box\n            width=\"100%\"\n            height=\"24px\"\n            backgroundColor=\"lavender\"\n            margin=\"4px 8px 4px 0px\"\n          ></Box>\n        </Flex>\n        <Flex\n          marginLeft=\"8px\"\n          direction=\"column\"\n          justifyContent=\"space-between\"\n          flex=\"5\"\n        >\n          <Box height=\"24px\" backgroundColor=\"lavender\" marginY=\"4px\"></Box>\n          <Box position=\"absolute\" bottom=\"16px\" right=\"16px\">\n            <Flex direction=\"column\" justifyContent=\"flex-end\">\n              <Heading\n                fontWeight=\"400\"\n                size=\"4xl\"\n                color=\"orange\"\n                textAlign=\"right\"\n              >\n                <Box display=\"inline-block\" width=\"3.5rem\">{`${\n                  timer\n                    ? Math.floor(timer / 60)\n                        .toString()\n                        .padStart(2, \"0\")\n                    : \"00\"\n                }`}</Box>\n                :\n                <Box display=\"inline-block\" width=\"3.5rem\">{`${\n                  timer ? (timer % 60).toString().padStart(2, \"0\") : \"00\"\n                }`}</Box>\n              </Heading>\n              <TREKProgress\n                seconds={timer ? (timer / timerStart) * 100 : 0}\n                width=\"300px\"\n                alignSelf=\"flex-end\"\n              />\n              <Heading\n                as=\"h3\"\n                fontWeight=\"400\"\n                size=\"2xl\"\n                color=\"orange\"\n                textAlign=\"right\"\n                py=\"16px\"\n              >\n                Efficiency Mode\n              </Heading>\n            </Flex>\n          </Box>\n        </Flex>\n      </Flex>\n    </Flex>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\nreportWebVitals();\n"],"sourceRoot":""}