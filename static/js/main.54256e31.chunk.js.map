{"version":3,"sources":["theme.ts","assets/buttonbeep.mp3","components/TREKButton.js","components/TREKProgress/TREKProgressSVG.tsx","assets/regeneration_cycle_complete.mp3","components/TREKProgress/TREKProgress.js","components/TREKTimer/TREKCountdown.tsx","components/TREKTimer/TREKTimer.tsx","assets/galaxy-rotating.mp4","components/TREKVideo.tsx","components/TREKBox.tsx","components/TREKBackground.tsx","components/TREKTemplate.tsx","components/TREKNumberGrid.tsx","assets/milky-way.jpeg","components/TREKBracketBox.tsx","components/TREKSpaceConsole.tsx","assets/voyager-warp-core.mp3","App.js","reportWebVitals.js","serviceWorkerRegistration.ts","assets/LCARSGTJ3.ttf","index.js"],"names":["theme","extendTheme","textStyles","content","fontSize","textAlign","lineHeight","color","components","FormLabel","baseStyle","Input","variants","outline","field","borderColor","Button","_focus","boxShadow","_disabled","opacity","cursor","_hover","backgroundColor","bg","_active","default","display","height","maxWidth","letterSpacing","fontWeight","borderRadius","pt","pr","box","verticalAlign","minHeight","width","sizes","md","colors","darkCoral","lightGreen","lavender","purple","lightOrange","orange","lightLavender","fonts","heading","body","colorScheme","shadows","styles","global","html","overflowX","margin","fontFamily","h1","TREKButton","Rotation","props","useSound","buttonbeep","volume","play","size","paddingTop","onClick","onclick","onMouseDown","label","createSVG","rotate","tint","top","xmlns","viewBox","fill","getColor","fillRule","d","transform","bottom","left","right","TREKProgressSVG","console","log","defaultProps","TREKProgress","value","seconds","px","isAnimated","TREKCountdown","useState","timer","setTimer","progressStart","setProgressStart","useEffect","direction","justifyContent","Math","floor","alignSelf","as","TREKTimer","timerStart","setTimerStart","isActive","setIsActive","toggleActive","setToggleActive","completeSound","timeoutID","useRef","current","clearTimeout","reset","Date","getTime","document","title","toString","padStart","setTimerInPageTitle","window","setTimeout","TREKVideo","templateColumns","padding","alignItems","autoPlay","muted","loop","src","type","video","TREKBox","path","form","w","h","createPath","viewport","mirror","version","id","fontStyle","textAnchor","x","y","text","TREKBackground","columnTemplateLG","innerWidth","visibility","templateRows","templateAreas","base","position","overflow","gap","p","gridArea","TREKTemplate","maxHeight","justifyItems","header","controls","contentfix","changeColor","keyframes","TREKNumberGrid","columnCount","setColumnCount","gridTemplateColumn","setGridTemplateColumn","numberGridRef","useCallback","node","getBoundingClientRect","prefersReducedMotion","usePrefersReducedMotion","setRandomNumber","numOfDigits","random","pow","ref","numberOfLines","cell","key","i","animation","undefined","push","textStyle","j","createGrid","TREKBracketBox","borderTopWidth","borderBottomWidth","borderLeftWidth","borderRightWidth","_before","background","Star","DistanceTimer","distance","setDistance","toFixed","TREKSpaceConsole","backgroundImage","milkyWay","backgroundPosition","backgroundRepeat","backgroundSize","numOfStars","stars","randomXTransform","ceil","randomYTransform","randomXOffset","randomYOffset","randomAnimationOffset","hyperspace","offsetX","offsetY","rotation","createSpace","App","setReset","voyagerWarpCore","setOrResetTimer","timerSettings","gridTemplateColumns","gridTemplateRows","maxW","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration","Notification","requestPermission"],"mappings":"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","file":"static/js/main.54256e31.chunk.js","sourcesContent":["import { extendTheme } from \"@chakra-ui/react\";\n\nexport const styles = {\n  global: () => ({\n    html: {\n      overflowX: \"hidden\",\n      margin: 0,\n      fontFamily: \"LCARSGTJ3\",\n      backgroundColor: \"black\",\n    },\n    h1: {\n      fontWeight: \"normal\",\n    },\n  }),\n};\n\nconst theme = extendTheme({\n  textStyles: {\n    content: {\n      // you can also use responsive styles\n      fontSize: [\"16px\", \"22px\"],\n      textAlign: \"right\",\n      lineHeight: \"110%\",\n      color: \"orange\",\n    },\n  },\n  components: {\n    FormLabel: {\n      baseStyle: {\n        color: \"darkOrange\",\n      },\n    },\n    Input: {\n      variants: {\n        outline: {\n          field: {\n            borderColor: \"darkOrange\",\n          },\n        },\n      },\n    },\n    Button: {\n      baseStyle: {\n        _focus: {\n          boxShadow: \"none\",\n        },\n        _disabled: {\n          opacity: 0.4,\n          cursor: \"not-allowed\",\n          boxShadow: \"none\",\n        },\n        _hover: {\n          backgroundColor: \"lightLavender\",\n          _disabled: {\n            bg: \"initial\",\n          },\n        },\n        _active: {\n          backgroundColor: \"lavender\",\n        },\n      },\n      variants: {\n        default: {\n          display: \"inline\",\n          height: \"3.5rem\",\n          maxWidth: \"12rem\",\n          backgroundColor: \"darkOrange\",\n          color: \"black\",\n          fontSize: \"1.75rem\",\n          letterSpacing: \"-0.05px\",\n          textAlign: \"right\",\n          fontWeight: \"400\",\n          borderRadius: \"full\",\n          pt: \"6\",\n          pr: \"6\",\n        },\n        box: {\n          display: \"block\",\n          verticalAlign: \"top\",\n          minHeight: \"12\",\n          width: \"9.75rem\",\n          backgroundColor: \"darkOrange\",\n          color: \"black\",\n          fontSize: \"1.75rem\",\n          letterSpacing: \"-0.05px\",\n          textAlign: \"right\",\n          fontWeight: \"400\",\n          borderRadius: \"none\",\n          pr: \"4\",\n        },\n      },\n      sizes: {\n        md: \"14\",\n      },\n    },\n  },\n  colors: {\n    darkCoral: \"#DB5F63\",\n    lightGreen: \"#D5DABA\",\n    lavender: \"#D695CF\",\n    purple: \"#9B96FF\",\n    lightOrange: \"#FFAA7A\",\n    orange: \"#FF9400\",\n    lightLavender: \"#E2E8F0\",\n  },\n  fonts: {\n    heading: `LCARSGTJ3`,\n    body: `LCARSGTJ3`,\n  },\n  colorScheme: {\n    darkCoral: \"#DB5F63\",\n  },\n  shadows: {\n    outline: \"0 0 0 4px #FF9400\",\n  },\n  styles,\n});\n\nexport default theme;\n","export default __webpack_public_path__ + \"static/media/buttonbeep.e856bb6a.mp3\";","import { Button } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport buttonbeep from \"../assets/buttonbeep.mp3\";\n\nfunction TREKButton(props) {\n  const [play] = useSound(buttonbeep, {\n    volume: 0.25,\n  });\n\n  const handleClick = () => {\n    play();\n  };\n\n  return (\n    <Button\n      size=\"lg\"\n      height=\"56px\"\n      maxWidth=\"192px\"\n      borderRadius=\"100px\"\n      backgroundColor={props.color}\n      color=\"black\"\n      fontSize={[\"22px\", \"22px\", \"28px\"]}\n      letterSpacing=\"-0.05px\"\n      textAlign=\"right\"\n      display=\"block\"\n      lineHeight=\"14px\"\n      paddingTop=\"20px\"\n      fontWeight=\"400\"\n      onClick={props.onclick}\n      onMouseDown={handleClick}\n    >\n      {props.label}\n    </Button>\n  );\n}\n\nexport default TREKButton;\n","import React, { FunctionComponent } from \"react\";\nimport { Box, propNames } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport theme from \"../../theme\";\nimport { EnumType } from \"typescript\";\n\nenum Rotation {\n  top,\n  bottom,\n  left,\n  right,\n}\n\ninterface TREKProgressSVGProps {\n  rotate: Rotation;\n  tint: string;\n  width?: number;\n  height?: number;\n}\n\nconst createSVG = (\n  rotate: Rotation,\n  tint: string\n): React.SVGProps<SVGSVGElement> => {\n  switch (rotate) {\n    case Rotation.top: {\n      return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 32\">\n          <path\n            fill={getColor(theme, tint)}\n            fillRule=\"evenodd\"\n            d=\"M640,-1.95943488e-14 L624,-1.95943488e-14 C624,4 621,8 616,8 L24,8 C19,8 16,4 16,-1.95943488e-14 L0,-1.95943488e-14 L0,8 C0,21 11,32 24,32 L616,32 C628,32 640,20 640,8 L640,-1.95943488e-14 Z\"\n            transform=\"matrix(1 0 0 -1 0 32)\"\n          />\n        </svg>\n      );\n    }\n    case Rotation.bottom: {\n      return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 640 32\">\n          <path\n            fill={getColor(theme, tint)}\n            fillRule=\"evenodd\"\n            d=\"M640,-1.95943488e-14 L624,-1.95943488e-14 C624,4 621,8 616,8 L24,8 C19,8 16,4 16,-1.95943488e-14 L0,-1.95943488e-14 L0,8 C0,21 11,32 24,32 L616,32 C628,32 640,20 640,8 L640,-1.95943488e-14 Z\"\n          />\n        </svg>\n      );\n    }\n    case Rotation.left: {\n      return (\n        <svg\n          xmlns=\"http://www.w3.org/2000/svg\"\n          viewBox=\"0 0 32 640\"\n          height=\"100%\"\n          width=\"auto\"\n        >\n          <path\n            fill={getColor(theme, tint)}\n            fillRule=\"evenodd\"\n            d=\"M32,0 L32,16 C28,16 24,19 24,24 L24,616 C24,621 28,624 32,624 L32,640 L24,640 C11,640 0,629 0,616 L0,24 C0,12 12,0 24,0 L32,0 Z\"\n          />\n        </svg>\n      );\n    }\n    case Rotation.right: {\n      return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 640\">\n          <path\n            fill={getColor(theme, tint)}\n            fillRule=\"evenodd\"\n            d=\"M0,0 L0,16 C4,16 8,19 8,24 L8,616 C8,621 4,624 0,624 L0,640 L8,640 C21,640 32,629 32,616 L32,24 C32,12 20,0 8,0 L0,0 Z\"\n          />\n        </svg>\n      );\n    }\n  }\n};\n\nconst TREKProgressSVG: FunctionComponent<TREKProgressSVGProps> = (props) => {\n  const color = getColor(theme, props.tint);\n  console.log(color, props.tint);\n\n  return <Box>{createSVG(props.rotate, props.tint)}</Box>;\n};\n\nTREKProgressSVG.defaultProps = {\n  rotate: 0,\n  tint: \"orange\",\n};\n\nexport default TREKProgressSVG;\n","export default __webpack_public_path__ + \"static/media/regeneration_cycle_complete.6c7a652c.mp3\";","import { Box, Flex, Progress, SimpleGrid } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport TREKProgressSVG from \"./TREKProgressSVG\";\n\nfunction TREKProgress(props) {\n  return (\n    <Box>\n      <TREKProgressSVG rotate={0} tint=\"lightOrange\" />\n      <Progress\n        value={props.seconds}\n        height=\"12px\"\n        colorScheme=\"pink\"\n        px=\"4%\"\n        width=\"100%\"\n        backgroundColor=\"transparent\"\n        isAnimated\n      />\n      <TREKProgressSVG rotate={1} tint=\"lightOrange\" />\n    </Box>\n  );\n}\n\nexport default TREKProgress;\n","import { Box, Flex, Heading } from \"@chakra-ui/react\";\nimport TREKProgress from \"../TREKProgress/TREKProgress\";\nimport React, { useEffect, useState, FunctionComponent } from \"react\";\n\ninterface TREKCountdownProps {\n  timer: number;\n  progressStart: number;\n}\n\nconst TREKCountdown: FunctionComponent<TREKCountdownProps> = (props) => {\n  const [timer, setTimer] = useState(props.timer);\n  const [progressStart, setProgressStart] = useState(props.progressStart);\n\n  useEffect(() => {\n    setTimer(props.timer);\n    setProgressStart(props.progressStart);\n  }, [props.timer, props.progressStart]);\n\n  return (\n    <Flex direction=\"column\" justifyContent=\"flex-end\">\n      <Heading\n        fontWeight=\"light\"\n        fontSize=\"128px\"\n        color=\"orange\"\n        textAlign=\"right\"\n        lineHeight=\"128px\"\n      >\n        <Box display=\"inline-block\" width=\"44px\">{`${\n          timer ? Math.floor(timer / 60 / 10) : \"0\"\n        }`}</Box>\n        <Box display=\"inline-block\" width=\"44px\">{`${\n          timer ? Math.floor(timer / 60) % 10 : \"0\"\n        }`}</Box>\n        :\n        <Box display=\"inline-block\" width=\"44px\">{`${\n          timer ? Math.floor((timer % 60) / 10) : \"0\"\n        }`}</Box>\n        <Box display=\"inline-block\" width=\"44px\">{`${\n          timer ? (timer % 60) % 10 : \"0\"\n        }`}</Box>\n      </Heading>\n      <TREKProgress\n        seconds={\n          timer && progressStart ? Math.floor((timer / progressStart) * 100) : 0\n        }\n        width=\"300px\"\n        alignSelf=\"flex-end\"\n      />\n      <Heading\n        as=\"h3\"\n        fontWeight=\"400\"\n        fontSize=\"72px\"\n        color=\"orange\"\n        textAlign=\"right\"\n        pt=\"4\"\n        lineHeight=\"72px\"\n      >\n        Efficiency Mode\n      </Heading>\n    </Flex>\n  );\n};\n\nexport default TREKCountdown;\n","import React, { FunctionComponent, useEffect, useState, useRef } from \"react\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport completeSound from \"../../assets/regeneration_cycle_complete.mp3\";\nimport TREKCountdown from \"./TREKCountdown\";\n\ninterface TREKTimerProps {\n  value: number;\n  toggleActive: boolean;\n  timerStart: number;\n  reset: boolean;\n}\n\nconst setTimerInPageTitle = (timer: number) => {\n  document.title = `${Math.floor(timer / 60)\n    .toString()\n    .padStart(2, \"0\")}:${(timer % 60).toString().padStart(2, \"0\")}`;\n};\n\nconst TREKTimer: FunctionComponent<TREKTimerProps> = (props) => {\n  const [timer, setTimer] = useState(props.value);\n  const [timerStart, setTimerStart] = useState(0);\n  const [isActive, setIsActive] = useState(true);\n  const [toggleActive, setToggleActive] = useState(false);\n  const [progressStart, setProgressStart] = useState(props.value);\n  const [play] = useSound(completeSound, {\n    volume: 0.25,\n  });\n  let timeoutID = useRef(0);\n\n  useEffect(() => {\n    console.log(\"use effect init\");\n    setIsActive(false);\n    if (timeoutID.current > 0) {\n      clearTimeout(timeoutID.current);\n    }\n    setTimerStart(0);\n    setProgressStart(props.value);\n\n    setTimer(props.value);\n  }, [props.value, props.reset]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    console.log(\"use effect toggle\");\n    if (timer > 0) {\n      setIsActive(!isActive);\n      setTimerStart(Math.floor(new Date().getTime() / 1000) + timer);\n    } else {\n      setIsActive(false);\n    }\n  }, [props.toggleActive, toggleActive]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    console.log(\"use effect timer\", timer, isActive, timerStart);\n\n    setTimerInPageTitle(timer);\n    if (isActive && timerStart > 0) {\n      timeoutID.current = window.setTimeout(() => {\n        setTimer(timerStart - Math.floor(new Date().getTime() / 1000));\n      }, 1000);\n      if (timer <= 0) {\n        /* new Notification(\"🖖 Regeneration Cycle Complete!\", {\n          icon: \"kadse/apple-touch-icon.png\",\n          body: \"Pormodor yo!\",\n          image:\n            \"https://i.pinimg.com/originals/96/48/68/964868019877993647b63d028761a052.png\",\n        }); */\n        setTimer(0);\n        play();\n        setToggleActive(false);\n        clearTimeout(timeoutID.current);\n      }\n    }\n  }, [timer, isActive]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <TREKCountdown timer={timer} progressStart={progressStart}></TREKCountdown>\n  );\n};\n\nTREKTimer.defaultProps = {};\n\nexport default TREKTimer;\n","export default __webpack_public_path__ + \"static/media/galaxy-rotating.56c183b8.mp4\";","import { Box, SimpleGrid } from \"@chakra-ui/react\";\nimport React, { FunctionComponent } from \"react\";\nimport TREKProgressSVG from \"./TREKProgress/TREKProgressSVG\";\nimport video from \"../assets/galaxy-rotating.mp4\";\n\ninterface TREKVideoProps {\n  src: string;\n}\n\nconst TREKVideo: FunctionComponent<TREKVideoProps> = (props) => {\n  return (\n    <SimpleGrid\n      templateColumns=\"1fr 18fr 1fr\"\n      padding=\"32px\"\n      alignItems=\"center\"\n      {...props}\n    >\n      <TREKProgressSVG rotate={2} tint=\"lightOrange\" />\n\n      <Box as=\"video\" autoPlay muted loop>\n        <source src={props.src} type=\"video/mp4\" />\n      </Box>\n\n      <TREKProgressSVG rotate={3} tint=\"lightOrange\" />\n    </SimpleGrid>\n  );\n};\n\nTREKVideo.defaultProps = {\n  src: video,\n};\n\nexport default TREKVideo;\n","import { Box } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React, { FunctionComponent } from \"react\";\nimport theme from \"../theme\";\n\ninterface TREKBoxProps {\n  form?: string;\n  width?: number;\n  height?: number;\n  tint?: string;\n  text?: string;\n  mirror?: boolean;\n}\n\nconst createPath = (form: string, w: number, h: number): string => {\n  let path = \"\";\n\n  switch (form) {\n    case \"curve\": {\n      path = `M${w},-7.10542736e-15 L${w},24 L200,24 C175.505067,24 156.395619,39.599346 156,64 L156,${h} L0,${h} L0,89.6 C0,40.1152864 40.1152864,-7.10542736e-15 89.6,-7.10542736e-15 L${w},-7.10542736e-15 Z`;\n      break;\n    }\n    case \"block\": {\n      path = `M0 0 h 156 v ${h} h-156 Z`;\n      break;\n    }\n    case \"default\": {\n      path = `M0 0 h 156 v 112 h-156 Z`;\n      break;\n    }\n  }\n\n  return path;\n};\n\nconst TREKBox: FunctionComponent<TREKBoxProps> = (props) => {\n  const color = props.tint ? getColor(theme, props.tint) : \"orange\";\n  const path = createPath(props.form!, props.width!, props.height!);\n  const viewport = `0 0 ${props.width} ${props.height}`;\n\n  return (\n    <Box transform={props.mirror ? \"rotateX(180deg)\" : \"none\"}>\n      <svg\n        width={props.width}\n        viewBox={viewport}\n        version=\"1.1\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <g id=\"Navigation/Edge-Down-Copy\">\n          <path d={path} id=\"Path\" fill={color}></path>\n          <text\n            fontFamily=\"LCARSGTJ3\"\n            fontSize=\"28\"\n            fontStyle=\"condensed\"\n            fontWeight=\"normal\"\n            fill=\"#000000\"\n            textAnchor=\"end\"\n            transform={\n              props.mirror\n                ? `scale(1,-1) translate(0,-${2 * props.height! - 36})`\n                : \"scale(1,1)\"\n            }\n          >\n            <tspan x=\"140\" y={props.height! - 8}>\n              {props.text}\n            </tspan>\n          </text>\n        </g>\n      </svg>\n    </Box>\n  );\n};\n\nTREKBox.defaultProps = {\n  form: \"block\",\n  width: 156,\n  height: 112,\n  tint: \"orange\",\n  text: \"Engange\",\n  mirror: false,\n};\n\nexport default TREKBox;\n","import { Box, Grid, GridItem } from \"@chakra-ui/react\";\nimport React, { FunctionComponent } from \"react\";\nimport TREKBox from \"./TREKBox\";\n\ninterface TREKBackgroundProps {}\n\nconst TREKBackground: FunctionComponent<TREKBackgroundProps> = (props) => {\n  const columnTemplateLG = `${window.innerWidth / 2.5}px 24px 8fr 22fr 1fr`;\n  const columnTemplateMD = `1fr`;\n\n  const templateAreasMD = \"'fix1' 'fix2' 'fix3' 'fix4' 'fix5' 'fix6'\";\n  const templateAreasLG =\n    \"'fix1 . . . . .' 'fix2 md11 md12 md13 md14 md15' 'fix3 md21 md22 md23 md24 md25' 'fix4 . . . . .' 'fix5 . . . . .' 'fix6 . . . . .'\";\n\n  return (\n    <Grid\n      visibility={[\"hidden\", \"visible\"]}\n      templateRows=\"120px 136px 112px 150px 48px 1fr\"\n      templateAreas={{ base: templateAreasMD, md: templateAreasLG }}\n      templateColumns={{ base: columnTemplateMD, md: columnTemplateLG }}\n      position=\"absolute\"\n      width=\"100vw\"\n      height=\"100vh\"\n      overflow=\"hidden\"\n      gap=\"8px\"\n      p=\"6\"\n      bg=\"unset\"\n      {...props}\n    >\n      <GridItem gridArea=\"fix1\">\n        <TREKBox\n          text=\"LCARS\"\n          tint=\"lavender\"\n          height={120}\n          mirror={true}\n          form=\"block\"\n        />\n      </GridItem>\n      <GridItem gridArea=\"fix2\">\n        <TREKBox\n          width={\n            window.innerWidth >= 786\n              ? window.innerWidth / 2.5\n              : window.innerWidth - 64\n          }\n          height={136}\n          text=\"NCC-74656\"\n          tint=\"purple\"\n          mirror={true}\n          form=\"curve\"\n        />\n      </GridItem>\n      <GridItem\n        gridArea=\"md11\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"orange\"\n        alignSelf=\"end\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md12\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"lavender\"\n        alignSelf=\"end\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md13\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"lavender\"\n        alignSelf=\"end\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md14\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"lavender\"\n        alignSelf=\"end\"\n      ></GridItem>\n      <GridItem gridArea=\"fix3\">\n        <TREKBox\n          width={\n            window.innerWidth >= 786\n              ? window.innerWidth / 2.5\n              : window.innerWidth - 64\n          }\n          text=\"Captain\"\n          height={112}\n          tint=\"darkCoral\"\n          form=\"curve\"\n        />\n      </GridItem>\n      <GridItem\n        gridArea=\"md21\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"darkCoral\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md22\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"12px\"\n        backgroundColor=\"lightOrange\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md23\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"lavender\"\n      ></GridItem>\n      <GridItem\n        gridArea=\"md24\"\n        display={{ base: \"none\", md: \"block\" }}\n        width=\"100%\"\n        height=\"24px\"\n        backgroundColor=\"lavender\"\n      ></GridItem>\n      <GridItem gridArea=\"fix4\">\n        <TREKBox\n          text=\"Janeway\"\n          height={150}\n          tint=\"darkCoral\"\n          form=\"block\"\n          mirror\n        />\n      </GridItem>\n      <GridItem gridArea=\"fix5\">\n        <TREKBox text=\"Engage\" tint=\"orange\" form=\"block\" height={48} mirror />\n      </GridItem>\n      <GridItem\n        gridArea=\"fix6\"\n        width=\"156px\"\n        height=\"100%\"\n        backgroundColor=\"lightOrange\"\n      ></GridItem>\n    </Grid>\n  );\n};\n\nexport default TREKBackground;\n","import { Box, Grid, GridItem, Heading } from \"@chakra-ui/react\";\nimport { ReactJSXElement } from \"@emotion/react/types/jsx-namespace\";\nimport React, { FunctionComponent } from \"react\";\nimport TREKBackground from \"./TREKBackground\";\n\ninterface TREKTemplateProps {\n  title: ReactJSXElement;\n  header: ReactJSXElement;\n  content: ReactJSXElement;\n  contentfix: ReactJSXElement;\n  controls: ReactJSXElement;\n}\n\nconst TREKTemplate: FunctionComponent<TREKTemplateProps> = (props) => {\n  const templateAreasLg =\n    \"'. title title title' '. header header controls' '. . . .' '. content content contentfix'\";\n  const columnTracksLg = \"196px 1fr 1fr 392px\";\n  const rowTracksLg = \"96px 128px 88px 1fr\";\n\n  const templateAreasMd =\n    \"'. title' '. controls' '. .' '. content' '. contentfix'\";\n  const columnTracksMd = \"180px 1fr\";\n  const rowTracksMd = \"96px 128px 88px  1fr 1fr\";\n\n  const templateAreasBase = \"'title' 'controls' 'contentfix' 'content'\";\n  const columnTracksBase = \"1fr\";\n  const rowTracksBase = \"96px 128px 1fr 1fr\";\n\n  return (\n    <Box>\n      <TREKBackground></TREKBackground>\n      <Grid\n        templateAreas={[templateAreasBase, templateAreasMd, templateAreasLg]}\n        templateColumns={[columnTracksBase, columnTracksMd, columnTracksLg]}\n        templateRows={[rowTracksBase, rowTracksMd, rowTracksLg]}\n        height={[\"unset\", \"100vh\"]}\n        maxHeight={[\"unset\", \"100vh\"]}\n        p=\"6\"\n        justifyItems=\"end\"\n        alignItems=\"end\"\n        overflow=\"hidden\"\n      >\n        <GridItem\n          gridArea=\"header\"\n          display={[\"none\", \"none\", \"none\", \"block\"]}\n          width=\"full\"\n        >\n          {props.header}\n        </GridItem>\n        <GridItem gridArea=\"title\">\n          <Heading\n            fontWeight=\"400\"\n            textAlign=\"right\"\n            fontSize={[\"15vw\", \"9vw\", \"96px\"]}\n            color=\"orange\"\n            alignSelf=\"end\"\n            lineHeight=\"96px\"\n          >\n            {props.title}\n          </Heading>\n        </GridItem>\n        <GridItem gridArea=\"controls\" w=\"full\" textAlign=\"right\">\n          {props.controls}\n        </GridItem>\n        <GridItem gridArea=\"content\" w=\"full\" height=\"full\">\n          {props.content}\n        </GridItem>\n        <GridItem gridArea=\"contentfix\">{props.contentfix}</GridItem>\n      </Grid>\n    </Box>\n  );\n};\n\nexport default TREKTemplate;\n","import {\n  Grid,\n  GridItem,\n  Text,\n  keyframes,\n  usePrefersReducedMotion,\n} from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React, {\n  FunctionComponent,\n  ReactNode,\n  useCallback,\n  useState,\n} from \"react\";\nimport theme from \"../theme\";\n\ninterface TREKNumberGridProps {\n  numberOfLines: number;\n}\n\nconst changeColor = keyframes`\n  0% { color: ${getColor(theme, \"orange\")}; }\n  56% { color: ${getColor(theme, \"orange\")}; }\n  57% { color: ${getColor(theme, \"lightLavender\")}; }\n  68% { color: ${getColor(theme, \"lightLavender\")}; }\n  69% { color: ${getColor(theme, \"orange\")}; }\n  84% { color: ${getColor(theme, \"orange\")}; }\n  85% { color: ${getColor(theme, \"black\")}; }\n  100% { color: ${getColor(theme, \"black\")}; }\n`;\n\nconst TREKNumberGrid: FunctionComponent<TREKNumberGridProps> = (props) => {\n  const [columnCount, setColumnCount] = useState(10);\n  const [gridTemplateColumn, setGridTemplateColumn] = useState(\"\");\n  const numberGridRef = useCallback((node) => {\n    let columnCount: number = 0;\n    if (node !== null) {\n      columnCount = Math.floor((node.getBoundingClientRect().width - 196) / 36);\n      setGridTemplateColumn(`36px 72px 24px repeat(${columnCount}, 36px) 32px`);\n      setColumnCount(columnCount);\n    }\n  }, []);\n\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const setRandomNumber = (numOfDigits: number): number => {\n    console.log(\"getting called 2\");\n    return Math.floor(Math.random() * Math.pow(10, numOfDigits));\n  };\n\n  const createGrid = (numberOfLines: number): ReactNode => {\n    let cell = [];\n    let key = 0;\n\n    for (let i = 0; i < numberOfLines; i++) {\n      const animation = prefersReducedMotion\n        ? undefined\n        : `${changeColor} infinite 5s linear ${i}s alternate`;\n\n      cell.push(\n        <GridItem key={key++}>\n          <Text animation={animation} textStyle=\"content\">\n            {setRandomNumber(4)}\n          </Text>\n        </GridItem>\n      );\n      cell.push(\n        <GridItem key={key++}>\n          <Text animation={animation} textStyle=\"content\">\n            {setRandomNumber(7)}\n          </Text>\n        </GridItem>\n      );\n      cell.push(\n        <GridItem key={key++}>\n          <Text animation={animation} textStyle=\"content\">\n            {setRandomNumber(1)}\n          </Text>\n        </GridItem>\n      );\n\n      for (let j = 0; j < columnCount; j++) {\n        cell.push(\n          <GridItem key={key++}>\n            <Text animation={animation} textStyle=\"content\">\n              {setRandomNumber(4)}\n            </Text>\n          </GridItem>\n        );\n      }\n\n      cell.push(\n        <GridItem key={key++}>\n          <Text animation={animation} textStyle=\"content\">\n            {setRandomNumber(2)}\n          </Text>\n        </GridItem>\n      );\n    }\n\n    return <>{cell}</>;\n  };\n\n  return (\n    <Grid w=\"full\" templateColumns={gridTemplateColumn} ref={numberGridRef}>\n      {createGrid(props.numberOfLines)}\n    </Grid>\n  );\n};\n\nTREKNumberGrid.defaultProps = {\n  numberOfLines: 5,\n};\n\nexport default TREKNumberGrid;\n","export default __webpack_public_path__ + \"static/media/milky-way.dfcc5602.jpeg\";","import { Box } from \"@chakra-ui/react\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport React, { FunctionComponent } from \"react\";\nimport theme from \"../theme\";\n\ninterface TREKBracketBoxProps {\n  size?: string;\n}\n\nconst TREKBracketBox: FunctionComponent<TREKBracketBoxProps | any> = (\n  props\n) => {\n  return (\n    <Box\n      {...props}\n      position=\"relative\"\n      borderTopWidth={props.size === \"lg\" ? \"8px\" : \"2px\"}\n      borderBottomWidth={props.size === \"lg\" ? \"8px\" : \"2px\"}\n      borderLeftWidth={props.size === \"lg\" ? \"16px\" : \"4px\"}\n      borderRightWidth={props.size === \"lg\" ? \"16px\" : \"4px\"}\n      borderColor={`${getColor(theme, \"orange\")}`}\n      borderRadius={props.size === \"lg\" ? \"24px\" : \"6px\"}\n      _before={{\n        position: \"absolute\",\n        top: props.size === \"lg\" ? \"-8px\" : \"-2px\",\n        bottom: props.size === \"lg\" ? \"-8px\" : \"-2px\",\n        left: props.size === \"lg\" ? \"12px\" : \"4px\",\n        right: props.size === \"lg\" ? \"12px\" : \"4px\",\n        content: \"''\",\n        background: \"black\",\n      }}\n    ></Box>\n  );\n};\n\nTREKBracketBox.defaultProps = {\n  size: \"lg\",\n};\n\nexport default TREKBracketBox;\n","import {\n  Box,\n  keyframes,\n  usePrefersReducedMotion,\n  Text,\n  HStack,\n  VStack,\n  Grid,\n  SimpleGrid,\n} from \"@chakra-ui/react\";\nimport { FunctionComponent, ReactNode, useEffect, useState } from \"react\";\nimport milkyWay from \"../assets/milky-way.jpeg\";\nimport { getColor } from \"@chakra-ui/theme-tools\";\nimport theme from \"../theme\";\nimport TREKBracketBox from \"./TREKBracketBox\";\n\ninterface TREKSpaceConsoleProps {\n  numberOfLines: number;\n}\n\ninterface StarProps {\n  size: number;\n  offsetX: number;\n  offsetY: number;\n  rotation: number;\n  animation: string | undefined;\n}\n\nconst Star: FunctionComponent<StarProps> = (props) => {\n  return (\n    <Box\n      width={`${props.size}px`}\n      height={`${props.size}px`}\n      position=\"absolute\"\n      top=\"50%\"\n      left=\"50%\"\n      backgroundColor=\"white\"\n      animation={props.animation}\n      opacity=\"0\"\n      borderRadius=\"lg\"\n    ></Box>\n  );\n};\n\nconst DistanceTimer: FunctionComponent = () => {\n  const [distance, setDistance] = useState(70000.0);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setDistance(distance - 0.00000001);\n    }, 200);\n  }, [distance]);\n\n  return (\n    <Text lineHeight=\"4px\" color={getColor(theme, \"lightOrange\")}>\n      {distance.toFixed(8)}\n    </Text>\n  );\n};\n\nconst TREKSpaceConsole: FunctionComponent<TREKSpaceConsoleProps> = (props) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  const createSpace = (numOfStars: number): ReactNode => {\n    let stars = [];\n\n    for (let i = 0; i < numOfStars; i++) {\n      const randomXTransform =\n        i *\n        Math.ceil(Math.random() * 200) *\n        Math.pow(-1, Math.ceil(Math.random() * 10));\n      const randomYTransform =\n        i *\n        Math.ceil(Math.random() * 200) *\n        Math.pow(-1, Math.ceil(Math.random() * 10));\n\n      const randomXOffset =\n        Math.pow(-1, Math.ceil(Math.random() * 10)) *\n        Math.ceil(Math.random() * 10);\n\n      const randomYOffset =\n        Math.pow(-1, Math.ceil(Math.random() * 10)) *\n        Math.ceil(Math.random() * 10);\n\n      const randomAnimationOffset =\n        Math.pow(-1, Math.ceil(Math.random() * 10)) *\n        Math.ceil(Math.random() * numOfStars);\n\n      const hyperspace = keyframes`\n        0% { transform: translate(0,0); opacity: 0%;  }\n        5% {opacity: 100%}\n        95% {opacity: 100%}\n        100%   { transform: translate(${randomXTransform}px,${randomYTransform}px);  opacity: 0%;}\n        `;\n\n      const animation = prefersReducedMotion\n        ? undefined\n        : `${hyperspace} infinite ${\n            Math.ceil(Math.random() * (numOfStars - 10)) + 10\n          }s ease-in ${randomAnimationOffset}s`;\n\n      stars.push(\n        <Star\n          size={(i % 2) + 2}\n          offsetX={randomXOffset}\n          offsetY={randomYOffset}\n          rotation={i * 17}\n          animation={animation}\n        ></Star>\n      );\n    }\n\n    return <>{stars}</>;\n  };\n\n  return (\n    <TREKBracketBox w=\"full\" h=\"full\" padding=\"4\">\n      <Box\n        width=\"100%\"\n        height=\"100%\"\n        maxHeight=\"100%\"\n        overflow=\"hidden\"\n        position=\"relative\"\n        backgroundImage={`url(${milkyWay})`}\n        backgroundPosition=\"center\"\n        backgroundRepeat=\"no-repeat\"\n        backgroundSize=\"cover\"\n      >\n        <HStack\n          position=\"relative\"\n          top=\"50%\"\n          left=\"50%\"\n          transform=\"translate(-12px, -12px)\"\n          alignItems=\"start\"\n        >\n          <TREKBracketBox w=\"24px\" h=\"24px\" size=\"sm\"></TREKBracketBox>\n          <VStack alignItems=\"start\">\n            <Text textStyle=\"content\" textAlign=\"left\">\n              Earth\n            </Text>\n            <DistanceTimer></DistanceTimer>\n          </VStack>\n        </HStack>\n        {createSpace(200)}\n      </Box>\n    </TREKBracketBox>\n  );\n};\n\nTREKSpaceConsole.defaultProps = {\n  numberOfLines: 5,\n};\n\nStar.defaultProps = {\n  size: 2,\n  offsetX: 4,\n  offsetY: 5,\n  rotation: 10,\n  animation: `none`,\n};\n\nexport default TREKSpaceConsole;\n","export default __webpack_public_path__ + \"static/media/voyager-warp-core.8adce59a.mp3\";","import \"./index.css\";\nimport \"./App.css\";\nimport \"./theme\";\nimport TREKButton from \"./components/TREKButton\";\nimport { Box, SimpleGrid, Button, Input } from \"@chakra-ui/react\";\nimport TREKTimer from \"./components/TREKTimer/TREKTimer\";\nimport React, { useEffect, useState } from \"react\";\nimport TREKVideo from \"./components/TREKVideo\";\nimport TREKTemplate from \"./components/TREKTemplate\";\nimport TREKNumberGrid from \"./components/TREKNumberGrid\";\nimport TREKSpaceConsole from \"./components/TREKSpaceConsole\";\nimport useSound from \"use-sound\";\n// @ts-ignore\nimport voyagerWarpCore from \"./assets/voyager-warp-core.mp3\";\n\nfunction App() {\n  const [timer, setTimer] = useState(0);\n  const [toggleActive, setToggleActive] = useState(false);\n  const [reset, setReset] = useState(false);\n  const [play] = useSound(voyagerWarpCore, {\n    volume: 0.1,\n    loop: true,\n  });\n\n  useEffect(() => {\n    play();\n  });\n\n  const setOrResetTimer = function (value) {\n    if (timer === value) {\n      setReset(!reset);\n    } else {\n      setTimer(value);\n    }\n  };\n\n  const timerSettings = {\n    pomodoro: 1500,\n    shortBreak: 300,\n    longBreak: 900,\n  };\n\n  return (\n    <Box bg=\"black\">\n      <TREKTemplate\n        title={\"Pomodoro Timer\"}\n        header={<TREKNumberGrid></TREKNumberGrid>}\n        controls={\n          <SimpleGrid\n            gridTemplateColumns={[\"1fr 1fr\", \"1fr 1fr\", \"192px 192px\"]}\n            gridTemplateRows=\"auto\"\n            gap=\"8px\"\n            maxW=\"392px\"\n          >\n            <TREKButton\n              label=\"Pomodoro\"\n              color=\"darkCoral\"\n              onclick={() => {\n                setOrResetTimer(timerSettings.pomodoro);\n              }}\n            >\n              Pomodoro\n            </TREKButton>\n            <TREKButton\n              label=\"long break\"\n              color=\"orange\"\n              onclick={() => {\n                setOrResetTimer(timerSettings.longBreak);\n              }}\n            />\n            <TREKButton\n              label=\"short break\"\n              color=\"orange\"\n              onclick={() => {\n                setOrResetTimer(timerSettings.shortBreak);\n              }}\n            />\n            <TREKButton\n              label=\"engage/stop\"\n              color=\"lightGreen\"\n              onclick={() => {\n                setToggleActive(!toggleActive);\n              }}\n            />\n          </SimpleGrid>\n        }\n        content={\n          <>\n            <TREKSpaceConsole></TREKSpaceConsole>\n            {/*           <TREKVideo></TREKVideo> */}\n          </>\n        }\n        contentfix={\n          <TREKTimer\n            value={timer}\n            toggleActive={toggleActive}\n            reset={reset}\n          ></TREKTimer>\n        }\n      ></TREKTemplate>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://cra.link/PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://cra.link/PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","export default __webpack_public_path__ + \"static/media/LCARSGTJ3.73fff889.ttf\";","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\nimport theme from \"./theme\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport \"./assets/LCARSGTJ3.ttf\";\nimport * as serviceWorkerRegistration from \"./serviceWorkerRegistration\";\n\nReactDOM.render(\n  <ChakraProvider theme={theme}>\n    <App />\n  </ChakraProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\nNotification.requestPermission(() => {});\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n"],"sourceRoot":""}